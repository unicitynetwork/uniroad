I am building a p2p serverless marketplace (called Uniroad) based on our own innovative Unicity blockchain platform. This platform allows a user to create and list his/her items for trading at the common shared marketlist, allows for a user to purchase an item from the marketlist into the user own inventory and mint coins into own user inventory that are being used for the payments. This marketplace is being executed by a p2p network of agents, where agents syncs the market with each other through p2p and perform trading on the users' behalf. So, when a user wants to purchase an item listed at the marketplace, the agent instance acting on the item owner behalf executes the respective transaction (accept the coin as the payment and send to the buyer the item). Items are represented by NFTs (fully self-contained stand-alone JSON objects) and coins represented as JSON stand-alone objects with the value and respective cryptographic proofs. Our library @unicitylabs/tx-flow-engine implements all the JSON-based token transaction and verification logic, CRDT for market database is done with YJS. uniroad-db.js implements all the market logic and is platform-agnostic (node or browser environment), while node-client.js is CLI agent implementation for node environment. I need you to analyze these JS files and produce for me a browser-based implementation of the market agent with the GUI layout as suggested in the "Uniroad gui layout.pdf" with same functions as node-client.js. This should be a simple standalone HTML page (no React or other frameworks) and instructions to generate fully self-contained minified JS file that is to be used with the webpage. We can use webpack for these purposes. Thanks!